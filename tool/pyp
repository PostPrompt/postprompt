#!/bin/bash

main(){
	if [ $# == 1 ]; then
		if [ $1 == javac ] || [ $1 == jc ]; then
			compile_java
		elif [ $1 == jhost ] || [ $1 == jh ]; then
			java_host r
		elif [ $1 == jhostback ] || [ $1 == jhb ]; then
			java_host b
		elif [ $1 == host ] || [ $1 == h ]; then
			run_host n
		elif [ $1 == hostback ] || [ $1 == hb ]; then
			run_host b
		elif [ $1 == hostrestart ] || [ $1 == hr ]; then
			run_host r
		elif [ $1 == client ] || [ $1 == c ]; then
			run_client n
		elif [ $1 == clientbad ] || [ $1 == cb ]; then
			run_client b
		elif [ $1 == clientcheck ] || [ $1 == cc ]; then
			run_client c
		elif [ $1 == clientexit ] || [ $1 == ce ]; then
			run_client d
		elif [ $1 == list ]; then
			list
		elif [ $1 == pyc ]; then
			clear_pyc
		elif [ $1 == djangorun ] || [ $1 == djr ]; then
			dj r
		elif [ $1 == setup ]; then
			setup_database n
			setup_bashrc
		elif [ $1 == database ]; then
			setup_database n
		elif [ $1 == database_reload ]; then
			setup_database d
		elif [ $1 == bashrc ]; then
			setup_bashrc
		elif [ $1 == both ]; then
			run_host b
			run_client
		elif [ $1 == xml ]; then
			get_game_xml
		elif [ $1 == help ] || [ $1 == "--help" ] || [ $1 == '-h']; then
			help_text
		else
			help_text
		fi
	else
		help_text
	fi
}

help_text(){
	echo "  Valid Commands are:"
	echo "    host        | h     Start the host"
	echo "    hostback    | hb    Start the host in the background"
	echo "    client      | c     Start the client"
	echo "    clientbad   | cb    Start the bad client (sends bad data to host)"
	echo "    clientcheck | cc    Sends a shut down to the host"
	echo "    clientexit  | ce    Sends a shut down to the host"
	echo "    djangorun   | djr   Runs the django web server"
	echo "    list                Lists all of the files"
	echo "    pyc                 Removes all pyc files"
	echo "    setup               Runs the database and bashrc commands"
	echo "    database            Runs the commands to create the database and populate it"
	echo "    database_reload     Deletes the database, then runs database"
	echo "    bashrc              Sets up the bashrc (must source ~/.bashrc afterwards)"
	echo "    both                Runs the host in the background and then the client"
	echo "    help | --help | -h  Displays this help message"
}

run_host(){
	cd $pyp/src/host
	if [ $1 == n ]; then
		python host.py
	elif [ $1 == b ]; then
		python host.py &
	elif [ $1 == r ]; then
		run_client d
		cd $pyp/src/host
		python host.py &
	fi
}
run_client(){
	cd $pyp/src/client
	if [ $1 == n ]; then
		python client.py
	elif [ $1 == b ]; then
		python client.py b
	elif [ $1 == c ]; then
		python client.py c
	elif [ $1 == d ]; then
		python client.py d
	fi
}

compile_java(){
	cd $pyp
	if [ ! -e build ]; then
		mkdir build
	fi
	#if [ ! -e build/ppbackend ]; then
	#	mkdir build/ppbackend
	#fi
	javac -cp src:src/share/java -d build src/ppbackend/Host.java
}
java_host(){
	cd $pyp
	if [ $1 == r ]; then
		java -cp build Host
	elif [ $1 == b ]; then
		java -cp build Host &
	fi
}

get_game_xml(){
	echo 'from pyplib import xml_parser
xml = request_new(1,0,2,0)
game_id = xml_parser.parse_int(xml_parser.parse_xml(xml),"game_id")
a = request_setup(game_id,1)
print request_out(game_id,1)
a = request_forfeit(game_id,1)
exit()' | python -i src/share/py/pyplib/client_host.py > game.xml
}
list(){
	cd $pyp
	find *
}
clear_pyc(){
	cd $pyp
	find . -name "*.pyc" | xargs rm
}
setup_bashrc(){
	echo "" >> ~/.bashrc
	echo "# Postprompt Setup" >> ~/.bashrc
	echo "" >> ~/.bashrc
	echo "export pyp=`pwd`" >> ~/.bashrc
	echo "export pyproot=\$pyp/root" >> ~/.bashrc
	echo "export PATH=\$PATH:\$pyp/tool" >> ~/.bashrc
	echo "export PYTHONPATH=\$PYTHONPATH:\$pyp/src/share/py" >> ~/.bashrc
	echo "alias cdpyp=\"cd \$pyp\"" >> ~/.bashrc
	echo "alias cdpypr=\"cd \$pyproot\"" >> ~/.bashrc
	echo "run 'source ~/.bashrc' to have this take effect"
}
setup_database(){
	cd $pyp/web
	if [ $1 == d ]; then
		rm ../root/opt/postprompt/shared_database
	fi
	../web/manage.py syncdb --noinput
	../tool/dbctl.py load all
}
dj(){
	cd $pyp/web
	if [ $1 == r ]; then
		./manage.py runserver 0.0.0.0:8080
	fi
}

main "$@"
