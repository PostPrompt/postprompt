#!/bin/bash

main(){
	if [ $# -gt 0 ]; then
		command=$1
		shift
		if [ $command == host ] || [ $command == h ] || [ $command == java ]; then
			host $@
		elif [ $command == compile ] || [ $command == jc ] || [ $command == javac ]; then
			compile $@
		elif [ $command == client ] || [ $command == c ]; then
			client $@
		elif [ $command == django ] || [ $command == dj ]; then
			django $@
		elif [ $command == database ] || [ $command == db ]; then
			database $@
		elif [ $command == bashrc ] || [ $command == b ]; then
			bashrc
		elif [ $command == clean ]; then
			clean
		elif [ $command == requirements ] || [ $command == reqs ]; then
			get_requirements
		elif [ $command == diagram ] || [ $command == dg ]; then
			view_diagram $@
		elif [ $command == doc ] || [ $command == d ]; then
			doc_gen
		elif [ $command == vim ] || [ $command == v ]; then
			vim_copy
		#shortcuts
		elif [ $command == hb ]; then
			host 'background'
		elif [ $command == close ] || [ $command == cc ]; then
			client 'close'
		elif [ $command == setup ]; then
			setup
		else
			help_text
		fi
	else
		help_text
	fi
}

help_text(){
	echo "
  Usage: $0 <command>
    Where command is one of the following:

  host      [background]        runs the backend host
                                   [default: in the foreground]
  compile                       compiles the backend host
  client    [close,bad,close]   runs the python test client
                                   [default: interactive mode]
  django                        runs django server
  database  [interactive,fresh] loads the database
                                   [default: assuming it exists]
  diagram   <command>           view the diagram of the class layout
  doc                           generate the parsed documentation and drawings
  vim                           copies the lib/vim/ config to your ~/.vim/
  bashrc                        configures .bashrc for this project
  clean                         cleans all *.pyc and removes build dir
  requirements                  installs the requirements for postprompt"
}

host(){
	cd $postprompt
	echo $#
	host_command="java -cp build:/usr/share/java/mysql-connector-java.jar Host"
	if [ $# -gt 0 ]; then
		if [ $1 == background ] || [ $1 == back ] || [ $1 == b ]; then
			$host_command &
			exit
		fi
	fi
	$host_command
}

compile(){
	cd $postprompt
	if [ ! -e build ]; then
		mkdir build
	fi
	javac -cp src:src/share/java -d build src/ppbackend/Host.java
}

client(){
	cd $postprompt/src/client
	python client.py $@
}

django(){
	cd $postprompt/web
	./manage.py runserver 0.0.0.0:8080
}

bashrc(){
	echo "
# PostPrompt Setup

export postprompt=`pwd`
export pp=\$postprompt
export postpromptroot=\$postprompt/root
export PATH=\$PATH:\$postprompt/tool
export PYTHONPATH=\$PYTHONPATH:\$postprompt/src/share/py
alias cdpp=\"cd \$postprompt\"" >> ~/.bashrc

	echo "run 'source ~/.bashrc' to have this take effect"
}

clean(){
	cd $postprompt
	rm -r build
	find . -name "*.pyc" | xargs rm
	rm docs/*.draw
	rm docs/gen_*.ppmd
}

setup(){
	get_requirements
	echo "
You may need to start the mysql server now.

Open a new terminal and do so
And then press enter to continue : "
	read
	database fresh
}

get_requirements(){
	cd $postprompt
	sudo ./tool/requirements
}

database(){
	cd $postprompt/web
	if [ $1 == interactive ] || [ $1 == i ]; then
		mysql -u developer --password=jfjfkdkdlslskdkdjfjf
	else
		if [ $1 == fresh ] || [ $1 == f ]; then
			mysql -u root -p < $postprompt/tool/mysql_fresh
		fi
		../web/manage.py syncdb --noinput
		../tool/dbctl.py all load
	fi
}

view_diagram(){
	cd $postprompt
	./tool/diagram_reader.py $@
}

doc_gen(){
	cd $postprompt
	./tool/diagram_reader.py -u -c=Game > ./docs/drawing.draw
	./tool/parse_classes.py > ./docs/gen_diagram.ppmd
	./tool/diagram_reader.py -f=docs/gen_diagram.ppmd -c=Game -u > ./docs/gen_drawing.draw
}

vim_copy(){
	if ! [ -d ~/.vim ]; then
		mkdir ~/.vim
	fi
	if ! [ -d ~/.vim/syntax ]; then
		mkdir ~/.vim/syntax
	fi
	if ! [ -d ~/.vim/after ]; then
		mkdir ~/.vim/after
	fi
	if [ -f ~/.vim/after/filetype.vim ]; then
		cat lib/vim/after/filetype.vim >> ~/.vim/after/filetype.vim
	else
		cp lib/vim/after/filetype.vim ~/.vim/after/
	fi
	cp lib/vim/syntax/* ~/.vim/syntax/
}

main $@
